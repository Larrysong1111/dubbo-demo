<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    
    <dubbo:application name="dubbo-demo-consumer" owner="programmer" organization="dubbox" />
   <!--  向 zookeeper 订阅 provider 的地址，由 zookeeper 定时推送 -->
    <dubbo:registry address="zookeeper://192.168.226.129:6379"/>
    <!-- 使用 dubbo 协议调用定义好的 api.PermissionService 接口 -->
    <dubbo:reference id="userService" interface="com.song.dubbo.dubbo_demo_api.UserService" timeout="5000">
    	<!-- 如果你只是想异步，完全忽略返回值，可以配置return="false"，以减少Future对象的创建和管理成本： -->
    	<!-- 可以设置是否等待消息发出：(异步总是不等待返回)
    		sent="true" 等待消息发出，消息发送失败将抛出异常。
			sent="false" 不等待消息发出，将消息放入IO队列，即刻返回。
    	 -->
    	 <!-- 异步future  -->
    	<dubbo:method name="getAsynUsersFuture" async="true" return="true" sent="true"></dubbo:method>
    	<!-- 异步通知  -->
    	<dubbo:method name="getAsynUsersNotify" async="true" onreturn="notify.onreturn" onthrow="notify.onthrow"></dubbo:method>
    	<!-- 异步回调 -->
    	<dubbo:method name="getAsynUsersCallback" async="true" ></dubbo:method>
    </dubbo:reference>
 
 <bean id="callBackService" class="com.song.dubbo.dubbo_demo_comsumer.CallBackService"></bean>
 <bean id="notify" class="com.song.dubbo.dubbo_demo_comsumer.notify.NotifyService"></bean>
 
</beans>